<?xml version="1.0"?>
<manageRTools>
<RTool name="Insert R commands" query="|1|">
<Parameter label="R commands:" type="textEdit" default="ls()" notnull="true"/>
<Parameter label="help" type="helpString" default="
&lt;h4&gt;Insert R commands help&lt;/h4&gt;
This is a simple test plugin that allows the user to input R commands into a simple text editor, 
and run the commands in the console.&#xA;The tool does not require any specific R libraries. The 
default command (&lt;tt&gt;ls()&lt;/tt&gt;), displays all variables and functions in the current 
R environment." notnull="true"/>
</RTool>
<RTool name="Voronoi polygons" category= "Spatial" query="
voronoipolygons &lt;- function(layer){&#xA;
  require(deldir)&#xA;
  crds &lt;- layer@coords&#xA;
  z &lt;- deldir(crds[,1], crds[,2])&#xA;
  w &lt;- tile.list(z)&#xA;
  polys &lt;- vector(mode='list', length=length(w))&#xA;
  require(sp)&#xA;
  for (i in seq(along=polys)) {&#xA;
    pcrds &lt;- cbind(w[[i]]$x, w[[i]]$y)&#xA;
    pcrds &lt;- rbind(pcrds, pcrds[1,])&#xA;
    polys[[i]] &lt;- Polygons(list(Polygon(pcrds)), ID=as.character(i))&#xA;
  }&#xA;
  SP &lt;- SpatialPolygons(polys)&#xA;
  voronoi &lt;- SpatialPolygonsDataFrame(SP, data=data.frame(x=crds[,1], &#xA;
  y=crds[,2], row.names=sapply(slot(SP, 'polygons'), function(x) slot(x, 'ID'))))&#xA;
}&#xA;
|1|.voronoi &lt;- voronoipolygons(|1|)">
<Parameter label="Point layer:" type="spComboBox" default="SpatialPointsDataFrame" notnull="true"/>
<Parameter label="help" type="helpString" default="
&lt;h4&gt;Voronoi polygons help&lt;/h4&gt;
Calculate the Voronoi or Thiessen tesselation of an input SpatialPointsDataFrame.&#xA;
Uses the &lt;tt&gt;sp&lt;/tt&gt; library to get the coordinates of 
the input SpatialPointsDataFrame, and creates a bounded Voronoi tesselation using the &lt;tt&gt;deldir&lt;/tt&gt; 
and &lt;tt&gt;tile.list&lt;/tt&gt; functions of the &lt;tt&gt;deldir&lt;/tt&gt; library. Output is a 
SpatialPolygonsDataFrame, with the X and Y coordinates of the input points as attributes.&#xA;
After running this plugin, you can acheive the same results by using the &lt;tt&gt;voronoipolygons()&lt;/tt&gt; 
function in the console." notnull="true"/>
</RTool>
<RTool name="Polygon centroids" category= "Spatial" query="
polygoncentroids &lt;- function(layer){&#xA;
  proj &lt;- proj4string(layer)&#xA;
  coords &lt;- coordinates(layer)&#xA;
  attrs &lt;- layer@data&#xA;
  centroids &lt;- SpatialPointsDataFrame(coords=coords, &#xA;
  data=attrs, proj4string=CRS(proj))&#xA;
}&#xA;
|1|.centroids &lt;- polygoncentroids(|1|)">
<Parameter label="Polygon layer:" type="spComboBox" default="SpatialPolygonsDataFrame" notnull="true"/>
<Parameter label="help" type="helpString" default="
&lt;h4&gt;Polygon centoids help&lt;/h4&gt;
Calculate the true centroids, or 'center of mass' for each polygon in an input SpatialPolygonsDataFrame.&#xA;
Uses the &lt;tt&gt;sp&lt;/tt&gt; library to get the coordinates of the input SpatialPolygonsDataFrame, 
and creates a new SpatialPointsDataFrame consisting of the centroid coordinates or the polygons, with 
the attributes of the input SpatialPolygonsDataFrame.&#xA;
After running this plugin, you can acheive the same results by using the &lt;tt&gt;polygoncentroids()&lt;/tt&gt; 
function in the console." notnull="true"/>
</RTool>
<RTool name="Simple plot" category= "Plotting" query="
plot(|1|, type='|2|', main='|3|', sub='|4|', xlab='|5|', 
ylab='|6|', bty='|7|', lab=c(|8|,|9|,7), las=|10|, |11|)&#xA;
if (|12|) {&#xA;
    |1|.fit &lt;- lm(|1| ~ seq(1,length(|1|)))&#xA;
    abline(|1|.fit, lty='|13|')&#xA;
}">
<Parameter label="Input values:" type="spComboBox" default="numeric;data.frame;" notnull="true"/>
<Parameter label="Plot type:" type="comboBox" default=
"points;lines;both;overplotted;histogram;stair steps;no plotting" notnull="true"/>
<Parameter label="Main title:" type="lineEdit" default="Scatterplot" notnull="false"/>
<Parameter label="Sub title:" type="lineEdit" default="" notnull="false"/>
<Parameter label="X label:" type="lineEdit" default="X Axis" notnull="false"/>
<Parameter label="Y label:" type="lineEdit" default="Y Axis" notnull="false"/>
<Parameter label="Bounding box:" type="comboBox" default=
"outline;l-shape;7-shape;c-shape;u-shape;]-shape;none" notnull="true"/>
<Parameter label="X axis ticks:" type="lineEdit" default="5" notnull="true"/>
<Parameter label="Y axis ticks:" type="lineEdit" default="5" notnull="true"/>
<Parameter label="Axis labels:" type="comboBox" default="1;2;3;0" notnull="true"/>
<Parameter label="Other parameters:" type="lineEdit" default="" notnull="false"/>
<Parameter label="Add trend line:" type="comboBox" default="FALSE;TRUE" notnull="true"/>
<Parameter label="Line style:" type="comboBox" default=
"solid;dashed;dotted;dotdash;longdash;twodash" notnull="true"/>
<Parameter label="help" type="helpString" default="
&lt;h4&gt;Simple plot help&lt;/h4&gt;
Produce a simple scatter-plot of numeric data. Common parameters can be specified using the interface,
and additional parameters can be supplied via the 'Other parameters' line edit (e.g. pch=12).&lt;br&gt;
&lt;b&gt;Note&lt;/b&gt;: The values of 'X axis ticks' and 'Y axis ticks' give the (approximate) number of tickmarks on the x 
and y axes, however, the plotting function will ultimately determine exactly how many ticks are drawn.&lt;br&gt;
&lt;b&gt;Note&lt;/b&gt;: The axis labels values (1,2,3,0) represent always horizontal, always perpendicular to the axis,
always vertical, and always parallel to the axis respectively.&lt;br&gt;
&lt;b&gt;Note&lt;/b&gt;: If 'Add trend line' is FALSE, then 'Line style' is ignored.&lt;br&gt;
This tool provides limited plotting functionality. For further plotting control, use the plot function 
directly by using the code provided by this function as an example.&lt;br&gt;&lt;br&gt;
For further information on plotting functions, see &lt;tt&gt;?plot&lt;/tt&gt; and &lt;tt&gt;?par.&lt;/tt&gt;" notnull="true"/>
</RTool>
<RTool name="Simple histogram" category= "Plotting" query="
hist(|1|, breaks='|2|', main='|4|', sub='|5|', xlab='|6|', bty='|7|', 
freq=ifelse('|3|'=='Frequency',TRUE,FALSE), |10|)&#xA;
if (|8|) lines(density(|1|), lty='|9|')">
<Parameter label="Input values:" type="spComboBox" default="numeric;data.frame" notnull="true"/>
<Parameter label="Break calculation:" type="comboBox" default=
"Sturges;Scott;Freedman-Diaconis" notnull="true"/>
<Parameter label="Plot type:" type="comboBox" default="Frequency;Density" notnull="true"/>
<Parameter label="Main title:" type="lineEdit" default="Histogram" notnull="false"/>
<Parameter label="Sub title:" type="lineEdit" default="" notnull="false"/>
<Parameter label="X label:" type="lineEdit" default="X Axis" notnull="false"/>
<Parameter label="Bounding box:" type="comboBox" default=
"outline;l-shape;7-shape;c-shape;u-shape;]-shape;none" notnull="true"/>
<Parameter label="Add probability distribution:" type="comboBox" default="FALSE;TRUE" notnull="true"/>
<Parameter label="Line style:" type="comboBox" default=
"solid;dashed;dotted;dotdash;longdash;twodash" notnull="true"/>
<Parameter label="Other parameters:" type="lineEdit" default="" notnull="false"/>
<Parameter label="help" type="helpString" default="
&lt;h4&gt;Simple histogram help&lt;/h4&gt;
Produce a simple histogram. Common parameters can be specified using the interface,
and additional parameters can be supplied via the 'Other parameters' line edit (e.g. col='blue').&lt;br&gt;
&lt;b&gt;Note&lt;/b&gt;: Setting 'Add probability function' to TRUE only makes sense if 'Plot type' is equal to 'Density'.&lt;br&gt;
&lt;b&gt;Note&lt;/b&gt;: If 'Add probability function' is FALSE, then 'Line style' is ignored.&lt;br&gt;
This tool provides limited histogram plotting functionality. For further control, use the hist function 
directly by using the code provided by this function as an example.&lt;br&gt;&lt;br&gt;
For further information on plotting histograms see &lt;tt&gt;?hist&lt;/tt&gt;." notnull="true"/>
</RTool>
<RTool name="Simple box-plot" category= "Plotting" query="
boxplot(|1|, varwidth=|2|, notch=|3|, outline=|4|, horizontal=|5|, 
main='|6|', sub='|7|', xlab='|8|', ylab='|9|')&#xA;
par()">
<Parameter label="Input data:" type="spComboBox" default="numeric;data.frame" notnull="true"/>
<Parameter label="Use variable width boxes:" type="comboBox" default="FALSE;TRUE" notnull="true"/>
<Parameter label="Add box notches:" type="comboBox" default="FALSE;TRUE" notnull="true"/>
<Parameter label="Show outliers:" type="comboBox" default="TRUE;FALSE" notnull="true"/>
<Parameter label="Plot boxes horizontally:" type="comboBox" default="FALSE;TRUE" notnull="true"/>
<Parameter label="Main title:" type="lineEdit" default="Box-plot" notnull="false"/>
<Parameter label="Sub title:" type="lineEdit" default="" notnull="false"/>
<Parameter label="X label:" type="lineEdit" default="X Axis" notnull="false"/>
<Parameter label="Y label:" type="lineEdit" default="Y Axis" notnull="false"/>
<Parameter label="help" type="helpString" default="
&lt;h4&gt;Simple box-plot help&lt;/h4&gt;
Produce a simple box-plot.&lt;br&gt;
&lt;b&gt;Note&lt;/b&gt;: Setting 'Use variable width boxes' to TRUE means that the boxes are drawn 
with widths proportional to the square-roots of the number of observations in the groups.&lt;br&gt;
&lt;b&gt;Note&lt;/b&gt;: If 'Add box notches' is TRUE, a notch is drawn in each side of the
boxes.  If the notches of two plots do not overlap this is 'strong evidence' that the two medians 
differ (Chambers &lt;i&gt;et al.&lt;/i&gt;, 1983, p. 62).  See &lt;tt&gt;?boxplot.stats&lt;/tt&gt; 
for the calculations used.&lt;br&gt;
This tool provides limited box-plot functionality. For further control, use the boxplot function 
directly by using the code provided by this function as an example.&lt;br&gt;&lt;br&gt;
For further information on box-plots see &lt;tt&gt;?boxplot&lt;/tt&gt;." notnull="true"/>
</RTool>
</manageRTools>