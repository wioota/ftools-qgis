<?xml version="1.0"?>
<manageRTools>
<RTool name="Insert R commands" query="|1|">
<Parameter label="R commands:" type="textEdit" default="ls()" notnull="true"/>
<Parameter label="help" type="helpString" default="
&lt;h4&gt;Insert R commands help&lt;/h4&gt;
This is a simple test plugin that allows the user to input R commands into a simple text editor, 
and run the commands in the console.&#xA;The tool does not require any specific R libraries. The 
default command (&lt;tt&gt;ls()&lt;/tt&gt;), displays all variables and functions in the current 
R environment." notnull="true"/>
</RTool>
<RTool name="Voronoi polygons" query="
voronoipolygons &lt;- function(layer){&#xA;
  require(deldir)&#xA;
  crds &lt;- layer@coords&#xA;
  z &lt;- deldir(crds[,1], crds[,2])&#xA;
  w &lt;- tile.list(z)&#xA;
  polys &lt;- vector(mode='list', length=length(w))&#xA;
  require(sp)&#xA;
  for (i in seq(along=polys)) {&#xA;
    pcrds &lt;- cbind(w[[i]]$x, w[[i]]$y)&#xA;
    pcrds &lt;- rbind(pcrds, pcrds[1,])&#xA;
    polys[[i]] &lt;- Polygons(list(Polygon(pcrds)), ID=as.character(i))&#xA;
  }&#xA;
  SP &lt;- SpatialPolygons(polys)&#xA;
  voronoi &lt;- SpatialPolygonsDataFrame(SP, data=data.frame(x=crds[,1], &#xA;
  y=crds[,2], row.names=sapply(slot(SP, 'polygons'), function(x) slot(x, 'ID'))))&#xA;
}&#xA;
|1|.voronoi &lt;- voronoipolygons(|1|)">
<Parameter label="Point layer:" type="spComboBox" default="SpatialPointsDataFrame" notnull="true"/>
<Parameter label="help" type="helpString" default="
&lt;h4&gt;Voronoi polygons help&lt;/h4&gt;
Calculate the Voronoi or Thiessen tesselation of an input SpatialPointsDataFrame.&#xA;
Uses the &lt;tt&gt;sp&lt;/tt&gt; library to get the coordinates of 
the input SpatialPointsDataFrame, and creates a bounded Voronoi tesselation using the &lt;tt&gt;deldir&lt;/tt&gt; 
and &lt;tt&gt;tile.list&lt;/tt&gt; functions of the &lt;tt&gt;deldir&lt;/tt&gt; library. Output is a 
SpatialPolygonsDataFrame, with the X and Y coordinates of the input points as attributes.&#xA;
After running this plugin, you can acheive the same results by using the &lt;tt&gt;voronoipolygons()&lt;/tt&gt; 
function in the console." notnull="true"/>
</RTool>
<RTool name="Polygon centroids" query="
polygoncentroids &lt;- function(layer){&#xA;
  proj &lt;- proj4string(layer)&#xA;
  coords &lt;- coordinates(layer)&#xA;
  attrs &lt;- layer@data&#xA;
  centroids &lt;- SpatialPointsDataFrame(coords=coords, &#xA;
  data=attrs, proj4string=CRS(proj))&#xA;
}&#xA;
|1|.centroids &lt;- polygoncentroids(|1|)">
<Parameter label="Polygon layer:" type="spComboBox" default="SpatialPolygonsDataFrame" notnull="true"/>
<Parameter label="help" type="helpString" default="
&lt;h4&gt;Polygon centoids help&lt;/h4&gt;
Calculate the true centroids, or 'center of mass' for each polygon in an input SpatialPolygonsDataFrame.&#xA;
Uses the &lt;tt&gt;sp&lt;/tt&gt; library to get the coordinates of the input SpatialPolygonsDataFrame, 
and creates a new SpatialPointsDataFrame consisting of the centroid coordinates or the polygons, with 
the attributes of the input SpatialPolygonsDataFrame.&#xA;
After running this plugin, you can acheive the same results by using the &lt;tt&gt;polygoncentroids()&lt;/tt&gt; 
function in the console." notnull="true"/>
</RTool>
</manageRTools>