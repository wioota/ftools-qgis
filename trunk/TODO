

	Current TODO list for fTools svn integration
	============================================

1) Set up fTools for translations -> started
	- Using Borys' method of generating 'fake' cpp file with translation items wrapped in 'fake' cpp classes
2) Move progress bar in-line with cancel and ok -> done
	- As per Tim Sutton's suggestion
3) Display percentage value on progress bar -> done
	- As per various users suggestions
4) Run each ftools function in it's own thread -> done 19 or 35 tools
	- As per Tim Sutton's suggestion
5) Document all functions and classes -> started
	- Just plain good sense!

	Criteria for inclusion of plugins into core
	===========================================
	
1) QGIS coding standards compliance. In particular, every plugin should be:
	* Documented in the user manual -> Probably not something I can do
	* Follow QGIS coding standards (we need to add some python specific elements to our coding standards too I guess) -> Awaiting python standards
	* Documented via doxygen -> ????
	* Have strings properly setup for translation (via tr()) -> started
	* Follow QGIS HIG (Human Interface Guidelines) so that it appears well integrated -> started
	- Be devoid of commercials / logos etc not related to the plugin -> passed
	- Be published under the GPL and the authors should attest that the intellectual property is their own. -> passed
	- Menu integration - the plugin should integrate well into the menu system -> passed
2) Tested and known to perform its work well. -> passed
3) Originality -> passed
	- Each plugin should fill a clearly defined role.
4) General applicability -> passed
	- We should avoid plugins that are highly niche.
5) Duty of care -> passed
	- Authors should accept responsibility to look after the plugin.
6) Phone home -> passed
	- Plugins should not 'phone home' or otherwise compromise the trust that users place in our software.

	HIG (Human Interface Guidelines)
	================================

1) Group related elements using group boxes -> started
	- Try to identify elements that can be grouped together and then use group boxes with a label identify the topic of that group. 
2) Capitalise first letter only in group box labels -> passed
	- Group box labels should be written as a phrase with leading capital letter, and all remaing words written with lower case first letters 
3) Do not end labels for widgets or group boxes with a colon -> passed
	- Adding a colon causes visual noise and does not impart additional meaning, so dont use them.
4) Keep harmful actions away from harmless ones -> passed
	- If you have actions for 'delete', 'remove' etc, try to impose adequate space between the harmful action and innocuous actions.
5) Always use a QButtonBox for 'OK', 'Cancel' etc buttons -> passed
	- Using a button box will ensure that the order of 'OK' and 'Cancel' etc, buttons is consistent.

